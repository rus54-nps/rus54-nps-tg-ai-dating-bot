import subprocess
import re
import time
import requests

LOCAL_PORT = 11434

def check_ollama_alive():
    try:
        r = requests.get(f"http://127.0.0.1:{LOCAL_PORT}/api/tags", timeout=2)
        if r.status_code == 200:
            print("‚úÖ Ollama –∑–∞–ø—É—â–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ.")
            return True
    except Exception:
        pass
    print("‚ùå Ollama –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ localhost:11434 ‚Äî –∑–∞–ø—É—Å—Ç–∏ `ollama serve`!")
    return False


def create_tunnel():
    print("üöÄ –°–æ–∑–¥–∞—é —Ç—É–Ω–Ω–µ–ª—å —á–µ—Ä–µ–∑ serveo.net...")

    # ‚úÖ –í–∞–∂–Ω–æ: –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–º–µ–Ω–Ω–æ 11434:11434
    command = [
        "ssh", "-o", "StrictHostKeyChecking=no", "-R",
        f"11434:127.0.0.1:{LOCAL_PORT}", "serveo.net"
    ]

    process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)

    url = None
    start_time = time.time()

    for line in iter(process.stdout.readline, ''):
        if "Forwarding TCP connections from" in line:
            match = re.search(r"serveo\.net:\d+", line)
            if match:
                url = f"{match.group(0)}"
                break
        if time.time() - start_time > 25:
            break

    if url:
        print(f"‚úÖ –¢—É–Ω–Ω–µ–ª—å —Å–æ–∑–¥–∞–Ω: {url}")
        print("üåê –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ –≤ Railway –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π OLLAMA_API –∫–∞–∫:")
        print(f"üëâ http://{url}")
        return f"http://{url}", process
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL. –í–æ–∑–º–æ–∂–Ω–æ, SSH –∏–ª–∏ Serveo –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º.")
        process.terminate()
        return None, None


if __name__ == "__main__":
    if not check_ollama_alive():
        exit(1)

    url, proc = create_tunnel()
    if url:
        print("üîÅ –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ —Ç—É–Ω–Ω–µ–ª—å...")
        try:
            test = requests.get(f"{url}/api/tags", timeout=10)
            if test.status_code == 200:
                print("‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω ‚Äî —Ç—É–Ω–Ω–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç, Ollama –¥–æ—Å—Ç—É–ø–Ω–∞ –æ–Ω–ª–∞–π–Ω!")
            else:
                print(f"‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª, –Ω–æ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: {test.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç—É–Ω–Ω–µ–ª—è: {e}")

        print("üü¢ –¢—É–Ω–Ω–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω. –ù–µ –∑–∞–∫—Ä—ã–≤–∞–π —ç—Ç–æ –æ–∫–Ω–æ, –ø–æ–∫–∞ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        try:
            proc.wait()
        except KeyboardInterrupt:
            print("\n‚õî –ó–∞–≤–µ—Ä—à–∞—é —Ç—É–Ω–Ω–µ–ª—å...")
            proc.terminate()
